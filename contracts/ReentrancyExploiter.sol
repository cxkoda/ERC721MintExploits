// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

import "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol";
import {Mintable, Exploiter} from "./MockToken.sol";

contract ReentrancyExploiter is Exploiter, IERC721Receiver {
    Mintable private target;
    uint32 private idxInIteration;
    uint256 private numIterations;

    function onERC721Received(
        address,
        address,
        uint256,
        bytes calldata
    ) external override returns (bytes4) {
        ++idxInIteration;

        if (numIterations > 0 && idxInIteration == numIterations) {
            --numIterations;
            idxInIteration = 0;
            mint();
        }
        return IERC721Receiver.onERC721Received.selector;
    }

    function mint() internal {
        target.mint();
    }

    function run(Mintable target_, uint256 numIterations_) external override {
        target = target_;
        numIterations = numIterations_ - 1;
        mint();
    }
}
